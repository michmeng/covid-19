{"version":3,"sources":["Countries.js","CovidVisualization.js","App.js","reportWebVitals.js","index.js"],"names":["split","defaultOptions","loop","autoplay","animationData","legoData","rendererSettings","preserveAspectRatio","defaultOptions2","doneData","CovidVisualization","props","state","done","undefined","loading","options","selectedOption","type","data","formatted","partitions","setTimeout","fetch","then","response","json","setState","countries","updateGraph","cleanStates","this","filter","each","includes","e","preventDefault","target","value","parser","metric","parseCases","parseDeaths","parseCountry","baseUrl","cases","deaths","timeline","Object","keys","forEach","key","newDate","name","push","markDone","item","county","element","index","partition","randomColor","Math","floor","random","toString","className","charAt","toUpperCase","slice","onChange","handleChange","map","id","width","aspect","margin","top","right","left","bottom","strokeDasharray","dataKey","tickLine","itemSorter","wrapperStyle","pointerEvents","stroke","dot","height","React","Component","App","href","rel","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e340260.chunk.js","sourcesContent":["export default `Afghanistan\nAlbania\nAlgeria\nAndorra\nAngola\nArgentina\nArmenia\nAustralia\nAustria\nAzerbaijan\nBahamas\nBahrain\nBangladesh\nBarbados\nBelarus\nBelgium\nBelize\nBenin\nBhutan\nBolivia\nBotswana\nBrazil\nBrunei\nBulgaria\nBurundi\nCambodia\nCameroon\nCanada\nCape Verde\nChad\nChile\nChina\nColombia\nComoros\nCongo\nCosta Rica\nCroatia\nCuba\nCyprus\nCzech Republic\nDenmark\nDjibouti\nDominica\nDominican Republic\nEcuador\nEgypt\nEl Salvador\nEquatorial Guinea\nEritrea\nEstonia\nEthiopia\nFiji\nFinland\nFrance\nGabon\nGambia\nGeorgia\nGermany\nGhana\nGreece\nGrenada\nGuatemala\nGuinea\nGuinea-Bissau\nGuyana\nHaiti\nHonduras\nHungary\nIceland\nIndia\nIndonesia\nIran\nIraq\nIsrael\nItaly\nIvory Coast\nJamaica\nJapan\nJordan\nKazakhstan\nKenya\nSouth Korea\nKosovo\nKuwait\nKyrgyzstan\nLaos\nLatvia\nLebanon\nLesotho\nLiberia\nLibya\nLiechtenstein\nLithuania\nLuxembourg\nMacedonia\nMadagascar\nMalawi\nMalaysia\nMaldives\nMali\nMalta\nMarshall Islands\nMauritania\nMauritius\nMexico\nMoldova\nMonaco\nMongolia\nMontenegro\nMorocco\nMozambique\nNamibia\nNepal\nNetherlands\nNew Zealand\nNicaragua\nNiger\nNigeria\nNorway\nOman\nPakistan\nPanama\nPapua New Guinea\nParaguay\nPeru\nPhilippines\nPoland\nPortugal\nQatar\nRomania\nRussian Federation\nRwanda\nSaint Vincent & the Grenadines\nSamoa\nSan Marino\nSaudi Arabia\nSenegal\nSerbia\nSeychelles\nSierra Leone\nSingapore\nSlovakia\nSlovenia\nSolomon Islands\nSomalia\nSouth Africa\nSouth Sudan\nSpain\nSri Lanka\nSudan\nSuriname\nSwaziland\nSweden\nSwitzerland\nSyria\nTaiwan\nTajikistan\nTanzania\nThailand\nTogo\nTunisia\nTurkey\nUganda\nUkraine\nUnited Arab Emirates\nUnited Kingdom\nUnited States\nUruguay\nUzbekistan\nVanuatu\nVenezuela\nVietnam\nYemen\nZambia\nZimbabwe`.split('\\n')","import React from \"react\";\nimport FadeIn from \"react-fade-in\";\nimport Lottie from \"react-lottie\";\nimport './CovidVisualization.css';\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as legoData from \"./legoloading.json\";\nimport * as doneData from \"./doneloading.json\";\nimport { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts';\nimport countries from './Countries';\n\nconst defaultOptions = {\n  loop: true,\n  autoplay: true,\n  animationData: legoData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\nconst defaultOptions2 = {\n  loop: false,\n  autoplay: true,\n  animationData: doneData.default,\n  rendererSettings: {\n    preserveAspectRatio: \"xMidYMid slice\"\n  }\n};\n\nexport default class CovidVisualization extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      done: undefined,\n      loading: false,\n      options: [],\n      selectedOption: this.props.type === 'country' ? 'Afghanistan' : 'alabama',\n      data: [],\n      formatted: [],\n      partitions: []\n    };\n  }\n\n  componentDidMount() {   \n    setTimeout(() => {\n      fetch(\"https://disease.sh/v3/covid-19/historical/usacounties\")\n        .then(response => response.json())\n        .then(json => {\n          this.setState({ loading: true });\n          if (this.props.type === 'country') { \n            this.setState({ options: countries }, this.updateGraph);\n          } else {\n            this.setState({ options: json }, this.cleanStates);\n          }\n        });\n    }, 2000);\n  }\n\n  cleanStates() { \n    this.setState({options: this.state.options.filter((each) => { \n      return !each.includes(\" \"); \n    })}, this.updateGraph);\n  }\n\n  handleChange(e) {\n    e.preventDefault();\n    this.setState({ done: false });\n    this.setState({ selectedOption: e.target.value }, this.updateGraph);\n  }\n\n  updateGraph() {\n    var parser = this.props.metric === \"cases\" ? this.parseCases : this.parseDeaths;\n    parser = this.props.type === \"country\" ? this.parseCountry : parser;\n    const baseUrl = this.props.type === \"country\" ? \"https://disease.sh/v3/covid-19/historical/\" : \"https://disease.sh/v3/covid-19/historical/usacounties/\";\n    setTimeout(() => {\n      fetch(baseUrl + this.state.selectedOption)\n        .then(response => response.json())\n        .then(json => {\n          this.setState({ loading: true });\n          this.setState({ data: json }, parser);\n        });\n    }, 1200);\n  }\n\n  parseCountry() {\n    var cases = [];\n    var deaths = [];\n    var partitions = [\"cases\", \"deaths\"];\n    var formatted = [];\n\n    cases = this.state.data.timeline.cases;\n    deaths = this.state.data.timeline.deaths;\n    \n    Object.keys(cases).forEach((key) => {\n      var newDate = {};\n\n      newDate.name = key;\n      if (this.props.metric === 'cases') {\n        newDate['cases'] = cases[key];\n      } else {\n        newDate['deaths'] = deaths[key];\n      }\n\n      formatted.push(newDate);\n    });\n\n    this.setState({ partitions: partitions })\n    this.setState({ formatted: formatted }, this.markDone);\n  }\n\n  parseCases() {\n    var cases = [];\n    var partitions = []\n    var formatted = [];\n\n    this.state.data.forEach((item) => {\n      cases.push(item.timeline.cases);\n      partitions.push(item.county);\n    });\n\n    Object.keys(cases[0]).forEach(function (key) {\n      var newDate = {};\n      newDate.name = key;\n\n      cases.forEach((element, index) => {\n        var partition = partitions[index];\n        newDate[partition] = element[key];\n      });\n\n      formatted.push(newDate);\n    });\n\n    this.setState({ partitions: partitions })\n    this.setState({ formatted: formatted }, this.markDone);\n  }\n\n  parseDeaths() {\n    var deaths = [];\n    var partitions = []\n    var formatted = [];\n\n    this.state.data.forEach((item) => {\n      deaths.push(item.timeline.deaths);\n      partitions.push(item.county);\n    });\n\n    Object.keys(deaths[0]).forEach(function (key) {\n      var newDate = {};\n      newDate.name = key;\n\n      deaths.forEach((element, index) => {\n        var partition = partitions[index];\n        newDate[partition] = element[key];\n      });\n\n      formatted.push(newDate);\n    });\n\n    this.setState({ partitions: partitions })\n    this.setState({ formatted: formatted }, this.markDone);\n  }\n\n  markDone() {\n    setTimeout(() => {\n      this.setState({ done: true });\n    }, 1000);\n  }\n\n  randomColor() {\n    var randomColor = Math.floor(Math.random() * 16777215).toString(16);\n    return \"#\" + randomColor;\n  }\n\n  render() {\n    return (\n      <div>\n        {!this.state.done ? (\n          <FadeIn className='container loader'>\n            <div>\n              Fetching data\n              {!this.state.loading ? (\n                <Lottie options={defaultOptions} height={120} width={120} />\n              ) : (\n                  <Lottie options={defaultOptions2} height={120} width={120} />\n                )}\n            </div>\n          </FadeIn>\n        ) : (\n            <div className='container'>\n              <div className='chartTitle'>{this.props.metric.charAt(0).toUpperCase() + this.props.metric.slice(1)} by {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}</div>\n              <div className='dd'>\n              {this.props.type.charAt(0).toUpperCase() + this.props.type.slice(1)}:\n                <select className='ddTitle' onChange={e => this.handleChange(e)} value={this.state.selectedOption}>\n                  {this.state.options.map((id) => { return (<option key={id} value={id}>{id.charAt(0).toUpperCase() + id.slice(1)}</option>) })}\n                </select>\n              </div>\n\n              <ResponsiveContainer className=\"container\" width={600} aspect={2}>\n                <LineChart\n                  data={this.state.formatted}\n                  margin={{\n                    top: 5, right: 30, left: 20, bottom: 5,\n                  }}>\n\n                  <CartesianGrid strokeDasharray=\"1 1\" />\n                  <XAxis dataKey=\"name\" tickLine={false}/>\n                  <YAxis tickLine={false} />\n                  <Tooltip itemSorter={item => (item.value) * (-1)}  wrapperStyle={{pointerEvents: 'auto'}}/>\n                  {\n                    this.state.partitions.map((id) => {\n                      return (<Line key={id} dataKey={id} type=\"monotone\" stroke={this.randomColor()} dot={false} />)\n                    })\n                  }\n                </LineChart>\n              </ResponsiveContainer>\n            </div>\n          )}\n      </div>\n    );\n  }\n}","import './App.css';\nimport CovidVisualization from './CovidVisualization.js';\n\n\nfunction App() {\n  return (\n    <div className='quadrant'>\n      <div className='qtop'>\n        <div className='quadrant1'>\n          <div className='title'>COVID-19 VISUALIZATION</div>\n        </div>\n      </div>\n      <div className='qbottom'>\n        <div className='quadrant3'>\n          <CovidVisualization type=\"state\" metric=\"cases\"/>\n        </div>\n        <div className='quadrant4'>\n          <CovidVisualization type=\"state\" metric=\"deaths\" />\n        </div>\n      </div>\n      <div className='qbottom'>\n        <div className='quadrant3'>\n          <CovidVisualization type=\"country\" metric=\"cases\" />\n        </div>\n        <div className='quadrant4'>\n          <CovidVisualization type=\"country\" metric=\"deaths\" />\n        </div>\n      </div>\n      <div className='qend'>\n        <div className='footer'>\n          Thanks to <a href=\"https://disease.sh/\" target=\"_blank\" rel=\"noreferrer\">disease.sh</a> for providing free access to data about the COVID-19 pandemic.\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}